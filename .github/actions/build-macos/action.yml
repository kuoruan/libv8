name: Build for macOS
description: 'Build V8 for macOS'

inputs:
  arch:
    description: 'Architecture to build for'
    default: x64
    required: false
    type: string

runs:
  using: "composite"
  steps:
    - name: Restore CCache
      uses: actions/cache@v4
      with:
        path: .ccache
        key: ${{ runner.os }}-${{ inputs.arch }}:libv8:ccache

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8' # https://chromium.googlesource.com/chromium/tools/depot_tools.git/+/refs/heads/main/README.md

    - name: Setup Build Tools
      shell: bash
      run: |
        brew install ccache lld

        echo "$(brew --prefix ccache)/libexec" >> "$GITHUB_PATH"

        echo "CCACHE_CPP2=yes" >> "$GITHUB_ENV"
        echo "CCACHE_SLOPPINESS=file_mtime,file_ctime,time_macros" >> "$GITHUB_ENV"
        echo "CCACHE_COMPILERCHECK=content" >> "$GITHUB_ENV"

        ccacheDir="${GITHUB_WORKSPACE}/.ccache"
        test -d "$ccacheDir" || mkdir "$ccacheDir"

        echo "CCACHE_DIR=$ccacheDir" >> "$GITHUB_ENV"

    - name: Download V8 Source
      shell: bash
      run: ./v8_download.sh

    - name: Switch Xcode Version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '^16.2'

    - name: Compile V8
      shell: bash
      run: ./v8_compile.sh ${{ inputs.arch }}

    - name: Show CCache Status
      shell: bash
      run: ccache -s

    - name: Test V8
      shell: bash
      run: ./v8_test.sh ${{ inputs.arch }}

    - name: Archive V8
      shell: bash
      run: ./archive.sh ${{ inputs.arch }}
